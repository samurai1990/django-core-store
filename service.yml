version: '3.9'

services:
  web:
    image: store_io:1.0.0
    container_name: store_io_web
    command: "./entrypoint.sh ${MODE}"
    volumes:
    - ./:/app
    env_file:
    - app.env
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    expose:
      - 8000
    networks:
    - store

  cache:
    image: redis:6-bullseye
    healthcheck:
      test: ["CMD","redis-cli","ping"]
    networks:
    - store

  db:
    image: postgres:14-bullseye
    environment:
    - POSTGRES_USER=admin
    - POSTGRES_PASSWORD=admin
    - POSTGRES_DB=targetio_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
    - store

  nginx:
    image: target_nginx:1.0.0
    depends_on:
      - web
    ports:
      - 80:80
    networks:
    - store

  minio:
    image: minio/minio:RELEASE.2023-09-16T01-01-47Z.fips
    container_name: targetioapi_storage
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - minio_storage:/data
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
    - store

  config_minio:
    image: minio/mc:latest
    container_name: config_minio
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
        /bin/sh -c "
        /usr/bin/mc alias set storage http://minio:9000 minioadmin minioadmin;
        /usr/bin/mc mb storage/store.io;
        /usr/bin/mc anonymous set public storage/store.io;
        exit 0;
        "
    networks:
    - store

networks:
  store:

volumes:
  minio_storage: {}